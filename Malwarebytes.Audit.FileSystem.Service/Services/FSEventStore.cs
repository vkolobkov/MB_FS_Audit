using Malwarebytes.Audit.FileSystem.Service.Model;
using System;
using System.Collections.Concurrent;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Malwarebytes.Audit.FileSystem.Service.Services
{
    public class FSEventStore : IFSEventStore, IDisposable
    {
        private bool _disposed = false;
        protected readonly ManualResetEventSlim _eventSlim = new ManualResetEventSlim();
        protected readonly ConcurrentQueue<FSActionDetails> _queue = new ConcurrentQueue<FSActionDetails>();

        public FSEventStore() { }

        public FSActionDetails Dequeue()
        {
            var success = _queue.TryDequeue(out var actionDetails);
            if(success)
            {
                return actionDetails;
            }
            else
            {
                _eventSlim.Reset();
                return null;
            }
        }

        public void Enqueue(FSActionDetails actionDetails)
        {
            _queue.Enqueue(actionDetails);
            if (!_eventSlim.IsSet) _eventSlim.Set();
        }

        public void WaitForEvents(int millisecondsTimeout)
        {
            _eventSlim.Wait(millisecondsTimeout);
        }

        public void Dispose() => Dispose(true);

        protected virtual void Dispose(bool disposing)
        {
            if (!_disposed)
            {
                if (disposing)
                {
                    _eventSlim.Dispose();
                }

                _disposed = true;
            }
        }
    }
}
